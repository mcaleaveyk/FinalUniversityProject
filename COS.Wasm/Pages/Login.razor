@page "/login"
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@inject IToastService toastService

<h1>Login</h1>

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Please enter your details</h5>
        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <FluentValidator /> 

            <div class="form-group">
                <label for="email">Email address</label>
                <InputText Id="email" Class="form-control" @bind-Value="loginModel.Email" />
                <ValidationMessage For="@(() => loginModel.Email)" />

            </div>

            <div class="form-group">
                <label for="password">Password</label>
                <InputText Id="password" type="password" Class="form-control" @bind-Value="loginModel.Password" />
                <ValidationMessage For="@(() => loginModel.Password)" />
            </div>

            <div class="col-xs-3 text-left">
                <button type="submit" class="btn btn-primary">Submit</button>
                <button @onclick="(() => GoToRegister())" class="btn btn-success ml-10">Register</button>
            </div>
            
        </EditForm>
    </div>
</div>

@code {

    private LoginDto loginModel = new LoginDto();

    private async Task HandleLogin()
    {
        var result = await AuthService.LoginAsync(loginModel);

        result.Match(
            userDto => { 
                toastService.ShowSuccess("Successful Login"); 
                 NavigationManager.NavigateTo("/"); 
            },
            error => { 
                toastService.ShowError(error.Message); 
            }
        );
    }

    public void GoToRegister()
    {
        NavigationManager.NavigateTo($"register");
    }

}
